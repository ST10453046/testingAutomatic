---
name: Lint, Build, Test, and Deploy .NET App
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  super-lint:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Super-Linter
        uses: github/super-linter@v4
        env:
          DEFAULT_BRANCH: main
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: super-lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln"
      - name: Build
        run: dotnet build "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln" --no-restore
          --configuration Release
      - name: Run Tests
        run: dotnet test "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln" --no-build --verbosity
          normal
  sonarcloud-scan:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln"
      - name: Build
        run: dotnet build "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln" --no-restore
          --configuration Release
      - name: Run Tests
        run: dotnet test "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln" --no-build --verbosity
          normal
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: sonarcloud-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln"
      - name: Build
        run: dotnet build "CybersecurityAwarenessBot_POE_Part_1
          copy/CybersecurityAwarenessBot_POE_Part_1.sln" --no-restore
          --configuration Release
      - name: Deploy
        run: |
          # Add your deployment commands here
          echo "Deploying to production..."
          # Example: dotnet publish --configuration Release --output ./publish
          # Example: scp -r ./publish user@server:/path/to/deploy
